//base code for getting a unique key:
int key_generation(){
//pid is just a name for the random key cuz i just thought its cool!
//this function may have its own ups and downs but it tries its best!
srand(time(NULL));   // Initialization for rand call and possibly other calls, should only be called once.so call it once and use the rand call as many times as u wish!!!
unsigned int pid = rand();      // Returns a pseudo-random integer between 0 and RAND_MAX

char pid_key_string_form[17];
itoa((uint16_t)pid, pid_key_string_form,DECIMAL); //this line means the same as :(void) sprintf(buffer, "%d", n);
pid_key=open(pid_key_string_form, O_CREAT);
char current_path[PATH_MAX];
getcwd(current_path, PATH_MAX);
if(current_path==NULL){
fprintf(stderr,"shit got tight and something really really unexpected happened while making a key generation file, the issue occured in the getcwd function cuz i used that in my key generation function\n");
fprintf(stderr, "please please restart ur program and if the issue is still persistant then please contact a professional\n, U may tho proced at ur own risk  :DDDDDD\n, jokes aside dont!!\n");
}
strcpy(current_path, pid_key_string_form);
key_t key=ftok(current_path,pid);
close(pid_key);
 while(remove(pid_key_string_form)!=0){
fprintf(stderr,"\n something messed up happened in the remove call in the function that is meant to generate a key, its the function that serves as the base to the rest of the key generation function, the name of the function is key_generation\n. i am gonna try to call the remove() function again\n");
}
return key;

}
